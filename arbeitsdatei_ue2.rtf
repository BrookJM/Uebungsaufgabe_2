{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue135;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid201\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid301\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1440\margr1440\vieww21780\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\sa240\partightenfactor0

\f0\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Aufgabe 1 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \cb3 Die Primzahlen in einem Intervall ganzer Zahlen \{2, ..., n\} lassen sich so berechnen, dass zun\'e4chst alle Zahlen aus dem Intervall entfernt werden, die durch 2 teilbar sind und gr\'f6\'dfer als 2 sind. Aus der Menge der verbleibenden Zahlen werden dann alle diejenigen Zahlen entfernt, die durch 3 teilbar sind und gr\'f6\'dfer als 3 sind, usw., bis n/2 erreicht ist. 
\f1\fs24 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\sa240\partightenfactor0
\ls1\ilvl0
\f0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 a) \'a0\up0 Schreiben Sie einen Algorithmus in Pseudocode, der dies leistet. 
\f1\fs24 \cb1 \uc0\u8232 \
\ls1\ilvl0
\f0\fs32 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 b) \up0 \'dcberlegen Sie sich, wie lange der Algorithmus in Abh\'e4ngigkeit von n maximal dauern k\'f6nnte. Erweitern Sie Ihren Pseudocode um einen Z\'e4hler. 
\f1\fs24 \cb1 \uc0\u8232 \
\ls1\ilvl0
\f0\fs32 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 c) \'a0\up0 Legen Sie eine Tabelle an, in der Sie angeben, wieviele Schritte Sie f\'fcr n=20, n=50, n=70 und n=100 ben\'f6tigen. 
\f1\fs24 \cb1 \uc0\u8232 \
\ls1\ilvl0
\f0\fs32 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 d) \'a0\up0 Haben Sie diesen Algorithmus aus der Mathematik erkannt? Wie hei\'dft er? \
\ls1\ilvl0
\f1\fs24 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\
{\listtext	.	}\
{\listtext	.	}\
{\listtext	.	}\
{\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \
\pard\pardeftab720\sl460\sa240\partightenfactor0

\f0\fs40 \cf2 \cb3 Aufgabe 2 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \cb3 Ein bedeutsamer Sortieralgorithmus ist 
\i MergeSort
\i0 . Eine m\'f6gliche Pseuocode- Implementierung von MergeSort ist (siehe \cf4 \strokec4 https://de.wikipedia.org/wiki/Mergesort\cf2 \strokec2 ): 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs18 \cf2 \cb3 funktion mergesort(liste);\
  falls (Gr\'f6\'dfe von liste <= 1) dann antworte liste\
  sonst\
     halbiere die liste in linkeListe, rechteListe\
     linkeListe = mergesort(linkeListe)\
     rechteListe = mergesort(rechteListe)\
     antworte merge(linkeListe, rechteListe)\
funktion merge(linkeListe, rechteListe);\
  neueListe\
  solange (linkeListe und rechteListe nicht leer)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl200\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   | \'a0   falls (erstes Element der linkeListe <= erstes Element der rechteListe)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0
\fs24 \cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl200\partightenfactor0
\ls2\ilvl0
\f2\fs18 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   | \'a0   dann f\'fcge erstes Element linkeListe in die neueListe hinten ein und entferne es aus linkeListe\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0
\fs24 \cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl200\partightenfactor0
\ls2\ilvl0
\f2\fs18 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   | \'a0   sonst f\'fcge erstes Element rechteListe in die neueListe hinten ein und entferne es aus rechteListe\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   solange_ende\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   solange (linkeListe nicht leer)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0
\fs24 \cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 
\f1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs18 \cf2 \cb3   |    f\'fcge erstes Element linkeListe in die neueListe hinten ein und entferne es aus linkeListe\
  solange_ende\
  solange (rechteListe nicht leer)\
  |    f\'fcge erstes Element rechteListe in die neueListe hinten ein und entferne es aus rechteListe\
  solange_ende\
  antworte neueListe\
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \
Angenommen wir haben n = 10 nat\'fcrliche Zahlen in beliebiger Reihenfolge gegeben (z.B. (5, 9, 2, 10, 3, 1, 4, 7, 6, 8)) und wollen diese sortieren. Wir lesen sie in ihrer Reihenfolge als Liste in den obigen Algorithmus ein.\uc0\u8232  
\f1\fs24 \cb1 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \cb3 \dn3 a) \up0 Wieviele Vergleiche sind mit dieser Implementierung notwendig, um die Zahlen zu sortieren? 
\f1\fs24 \cb1 \

\f0\fs32 \cb3 \dn3 b) \up0 Verallgemeinern Sie das Resultat f\'fcr n nat\'fcrliche Zahlen. 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 \cb3 Grundlegende Konzepte der Informatik, Studiengang Informatik & Wirtschaft \'96 Wintersemester 2015/16 \'96 Seite 2 \
\
\
\
\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f1 \cf2 \cb1 \
\pard\pardeftab720\sl460\sa240\partightenfactor0

\f0\fs40 \cf2 \cb3 \
Aufgabe 3 
\f1\fs24 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\sa240\partightenfactor0
\ls3\ilvl0
\f0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 a) \'a0\up0 Die Summe der ganzen Zahlen zwischen 1 und n soll berechnet werden. Schreiben Sie einen Algorithmus in Pseudocode, der dies umsetzt. 
\f1\fs24 \cb1 \uc0\u8232 \
\ls3\ilvl0
\f0\fs32 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 b) \'a0\up0 Die Summe S
\fs22 \dn3 n 
\fs32 \up0 der ganzen Zahlen zwischen 1 und n kann rekursiv wie folgt definiert werden: 
\f1\fs24 \cb1 \uc0\u8232 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \cb3 S
\fs22 \dn3 1 
\fs32 \up0 :=1,\cb1 \uc0\u8232 \cb3 S
\fs22 \dn3 n 
\fs32 \up0 := S
\fs22 \dn3 n -1
\fs32 \up0 +n f\'fcr n>1 
\f1\fs24 \cb1 \

\f0\fs32 \cb3 Schreiben Sie einen Algorithmus in Pseudocode, der die Berechnung auf diese Weise ausf\'fchrt. \
\
\
\
\
\

\f1\fs24 \cb1 \
\pard\pardeftab720\sl460\sa240\partightenfactor0

\f0\fs40 \cf2 \cb3 Aufgabe 4 
\f1\fs24 \cb1 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\fs32 \cf2 \cb3 Algorithmen k\'f6nnen auch graphisch mit Programmablaufpl\'e4nen (Flowcharts) dargestellt werden. 
\f1\fs24 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\sa240\partightenfactor0
\ls4\ilvl0
\f0\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 a) \'a0\up0 Testen Sie die folgenden Eingaben: n=140 und m=63 mit dem untenstehenden Programm und schreiben Sie die Zwischenwerte der Variablen r und die sich ver\'e4ndernden Werte von m und n in einer Tabelle auf. Was ist am Ende das Ergebnis? 
\f1\fs24 \cb1 \uc0\u8232 \
\ls4\ilvl0
\f0\fs32 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\dn3 \outl0\strokewidth0 \strokec2 b) \'a0\up0 Welchen bekannten Algorithmus repr\'e4sentiert dieser Ablaufplan? 
\f1\fs24 \cb1 \uc0\u8232 \
}